/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "k8s.io/sample-controller/pkg/apis/samplecontroller/v1alpha1"
)

// ScaleScheduleLister helps list ScaleSchedules.
// All objects returned here must be treated as read-only.
type ScaleScheduleLister interface {
	// List lists all ScaleSchedules in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ScaleSchedule, err error)
	// ScaleSchedules returns an object that can list and get ScaleSchedules.
	ScaleSchedules(namespace string) ScaleScheduleNamespaceLister
	ScaleScheduleListerExpansion
}

// scaleScheduleLister implements the ScaleScheduleLister interface.
type scaleScheduleLister struct {
	indexer cache.Indexer
}

// NewScaleScheduleLister returns a new ScaleScheduleLister.
func NewScaleScheduleLister(indexer cache.Indexer) ScaleScheduleLister {
	return &scaleScheduleLister{indexer: indexer}
}

// List lists all ScaleSchedules in the indexer.
func (s *scaleScheduleLister) List(selector labels.Selector) (ret []*v1alpha1.ScaleSchedule, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ScaleSchedule))
	})
	return ret, err
}

// ScaleSchedules returns an object that can list and get ScaleSchedules.
func (s *scaleScheduleLister) ScaleSchedules(namespace string) ScaleScheduleNamespaceLister {
	return scaleScheduleNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ScaleScheduleNamespaceLister helps list and get ScaleSchedules.
// All objects returned here must be treated as read-only.
type ScaleScheduleNamespaceLister interface {
	// List lists all ScaleSchedules in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ScaleSchedule, err error)
	// Get retrieves the ScaleSchedule from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ScaleSchedule, error)
	ScaleScheduleNamespaceListerExpansion
}

// scaleScheduleNamespaceLister implements the ScaleScheduleNamespaceLister
// interface.
type scaleScheduleNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ScaleSchedules in the indexer for a given namespace.
func (s scaleScheduleNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ScaleSchedule, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ScaleSchedule))
	})
	return ret, err
}

// Get retrieves the ScaleSchedule from the indexer for a given namespace and name.
func (s scaleScheduleNamespaceLister) Get(name string) (*v1alpha1.ScaleSchedule, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("scaleschedule"), name)
	}
	return obj.(*v1alpha1.ScaleSchedule), nil
}
